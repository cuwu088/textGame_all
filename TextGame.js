class Player {
  #name;
  #health;
  #stamina;
  #inventory;

  constructor(name = "Tofu") {
    this.#name = name;
    this.#health = 100;
    this.#stamina = 200;
    this.#inventory = [];
  }

  getName() {
    return this.#name;
  }
  setName(name) {
    this.#name = name;
  }

  getHealth() {
    return this.#health;
  }
  setHealth(health) {
    this.#health = health;
  }

  getStamina() {
    return this.#stamina;
  }
  setStamina(value) {
    this.#stamina = value;
  }

  getInventory() {
    return this.#inventory;
  }
  addInventory(item) {
    this.#inventory.push(item);
  }
  delInventory(item) {
    const index = this.#inventory.indexOf(item);
    if (index !== -1) {
      this.#inventory.splice(index, 1);
    }
  }

  go(input) {
    var intake = input.split(" ")[1];
    var ways = getRoom(id).getWays();

    if (ways.includes(intake)) {
      if (this.#stamina >= 5) {
        var text = this.#name + " goes " + intake;
        if (intake === "north") {
          id += 100;
        } else if (intake === "south") {
          id -= 100;
        } else if (intake === "east") {
          id += 1;
        } else if (intake === "west") {
          id -= 1;
        }
        this.#stamina -= 5;
      } else {
        var text = this.#name + " tired.";
      }
    } else {
      var text = "nothing there.";
    }
    showtext(text);
  }

  take(itemName, ID, boxID) {
    if (fun === -1){
      var room = getObject(boxID, ID);
    }else{
      var room = getRoom(ID);
    }

    const object = room.getItems().find((obj) => obj.getName() === itemName);
    var text;
    if (object) {
      text = this.#name + " takes " + object.getName();
      this.addInventory(object);
      room.delItems(itemName);
      room.setDescription(room.getDescription(), object);
    } else {
      text = this.#name + ": ....";
    }
    showtext(text);
  }
}

class Object {
  #name;
  #id;
  #description;

  constructor(name, id, description) {
    this.#name = name;
    this.#id = id;
    this.#description = description;
  }
  getName() {
    return this.#name;
  }
  setName(name) {
    this.#name = name;
  }

  getId() {
    return this.#id;
  }
  setId(id) {
    this.#id = id;
  }

  getDescription() {
    return this.#description;
  }
  setDescription(description) {
    this.#description = description;
  }
}
class Box extends Object {
  #items;
  constructor(name, id, description, items = []) {
    super(name, id, description);
    this.#items = items;
  }
  setDescription(description, item) {
    if (item) {
      const updatedDescription = description.replace(item.getName(), "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤");
      super.setDescription(updatedDescription);
    } else {
      super.setDescription(description); 
    }
  }

  getItems() {
    return this.#items;
  }
  delItems(itemName) {
    const updatedItems = this.getItems().filter(
      (obj) => obj.getName() !== itemName
    );
    this.#items = updatedItems;
  }
}
class Door extends Object {
  #nextRoom;
  #status;
  #req;
  constructor(name, id, description, nextRoom, status = "unlock" , req = 6666) {
    super(name, id, description);
    this.#nextRoom = nextRoom;
    this.#status = status;
    this.#req = req;
  }
  next() {
    if (this.#status === "lock") {
      for (const item of player.getInventory()) {
        if (item.getId() === this.#req) {
          id = this.#nextRoom;
          return;
        }
      }
      showtext("‡∏°‡∏±‡∏ô‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏¢‡∏π‡πà");
    } else {
      id = this.#nextRoom;
    }
  }
}
class Flashlight extends Object {
  constructor(name, id, description) {
    super(name, id, description);
  }
}

class Room {
  #name;
  #id;
  #description;
  #ways;
  #objects;
  #items;

  constructor(name, id, description, ways = [], objects = [], items = []) {
    this.#name = name;
    this.#id = id;
    this.#description = description;
    this.#ways = ways;
    this.#objects = objects;
    this.#items = items;
  }
  getName() {
    return this.#name;
  }
  setName(name) {
    this.#name = name;
  }

  getId() {
    return this.#id;
  }
  setId(id) {
    this.#id = id;
  }

  getDescription() {
    return this.#description;
  }
  setDescription(description) {
    this.#description = description;
  }
  setDescription(description, item) {
    const updatedDescription = description.replace(item.getName(), "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤");
    this.#description = updatedDescription;
  }

  getWays() {
    return this.#ways;
  }
  getObjects() {
    return this.#objects;
  }

  getItems() {
    return this.#items;
  }
  delItems(itemName) {
    const updatedItems = this.getItems().filter(
      (obj) => obj.getName() !== itemName
    );
    this.#items = updatedItems;
  }
}
class End extends Room {
  constructor(name, id, description, ways = [], objects = [], items = []) {
    super(name, id, description, ways, objects, items);
  }
  ending() {
    let text;
    for (const item of player.getInventory()) {
      if (item.getId() === 10) {
        text = "Ending: " + player.getName() + " ‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ö‡πâ‡∏≤‡∏ô...‡∏ó‡πâ‡∏≠‡∏á‡∏ü‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÅ‡∏•‡∏∞‡∏û‡∏£‡∏∞‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏∑‡∏î‡∏™‡∏ô‡∏¥‡∏ó";
        break;
      }
    }
    if (!text) {
      text = "Ending: " + player.getName() + " ‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏≠‡∏µ‡∏Å‡πÄ‡∏•‡∏¢";
    }
    return text;
  }
}

var inputElement = document.getElementById("input");
var obj = null;
var objID = null;
var fun = 0;
var id = 0;

var bed = new Object("‡πÄ‡∏ï‡∏µ‡∏¢‡∏á",-1,"‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ï‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏π‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
var wardrobe = new Object("‡∏ï‡∏π‡πâ‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤",-2,"‡πÉ‡∏ô‡∏ï‡∏π‡πâ‡∏°‡∏µ‡πÄ‡πÄ‡∏ï‡πà‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤");
var table = new Object("‡πÇ‡∏ï‡πä‡∏∞",-3,"‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°‡∏à‡∏±‡∏ï‡∏∏‡∏£‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πâ");
var chair = new Object("‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ",-3,"‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πâ");
var woodenbox = new Object("‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÑ‡∏°‡πâ", -4, "‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÑ‡∏°‡πâ‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡πÄ‡∏ô‡πà‡∏ô‡∏´‡∏ô‡∏≤");
var tv = new Object("‡∏ó‡∏µ‡∏ß‡∏µ", -5, "‡∏°‡∏±‡∏ô‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏°‡∏≤‡∏ô‡∏≤‡∏ô‡∏°‡∏≤‡∏Å");
var sofa = new Object("‡πÇ‡∏ã‡∏ü‡∏≤", -6, "‡πÇ‡∏ã‡∏ü‡∏≤‡∏™‡∏µ‡∏î‡∏≥‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì3‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á");
var shoerack = new Object("‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤", -7, "‡∏°‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤");
var shelves  = new Object("‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏Ç‡∏≠‡∏á", -8, "‡∏°‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤");
var windoww = new Object("‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á", -9, "‡∏°‡∏±‡∏ô‡πÄ‡πÄ‡∏ï‡∏Å‡πÑ‡∏õ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô");

var flashlight = new Flashlight("flashlight", 1, "‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏≠‡∏á‡πÅ‡∏™‡∏á‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏∑‡∏î");
var key = new Object("key", 2, "‡∏Å‡∏∏‡∏ç‡πÅ‡∏à‡∏°‡∏±‡∏ô‡∏î‡∏π‡πÄ‡∏Å‡πà‡∏≤‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏õ‡∏Å‡∏ï‡∏¥");
var pictureframe = new Box("pictureframe", 3, "‡∏Å‡∏£‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà‡∏£‡∏π‡∏õ...‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏£‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏°‡∏µ key", [key]);
var doorB1 = new Door("door", 4, "‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°‡∏à‡∏±‡∏ï‡∏∏‡∏£‡∏±‡∏™‡πÄ‡∏Å‡πà‡∏≤‡πÜ", 666, "lock", 2);
var doorG1 = new Door("door", 5, "‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°‡∏ú‡∏∑‡∏ô‡∏ú‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡πÜ", 1);
var note1 = new Object("note", 6, "‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡∏¢‡∏°‡∏ú‡∏∑‡∏ô‡∏ú‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ß‡πâ‡∏ß‡πà‡∏≤ 'Alice ‡∏â‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏¢‡πâ‡∏≤‡∏¢‡∏ö‡πâ‡∏≤‡∏ô‡∏°‡∏≤‡πÉ‡∏ô‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏≠‡∏Å‡πÄ‡πÄ‡∏•‡πâ‡∏ß ‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ô‡∏µ‡πâ‡∏Ç‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏ô‡∏¥‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢‡πÄ‡∏•‡∏¢‡∏•‡∏∞   ‡∏à‡∏≤‡∏Å Pikko' ‡∏°‡∏±‡∏ô‡∏î‡∏π‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡πÇ‡∏ô‡πä‡∏ï");
var note2 = new Object("note", 7, "'....‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ôñ£òñ£òñ£òñ£ò ‡∏´‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡πÉ‡∏à‡∏Å‡∏•‡∏≤‡∏á‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏ö‡∏≠‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏•‡∏∞ ‡πÄ‡∏£...' ‡∏°‡∏±‡∏ô‡∏ñ‡∏π‡∏Å‡πÄ‡∏ú‡∏≤‡πÑ‡∏õ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô");
var note3 = new Object("note", 8, "‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å‡πÄ‡πÄ‡∏ï‡πà‡∏°‡∏µ‡∏ö‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ '....‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏≠‡∏á‡∏û‡∏ß‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ä‡∏±‡πâ‡∏ô‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô‡∏•‡∏∞‡∏â‡∏±‡πâ‡∏ô‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏ß‡πâ‡πÑ‡∏´‡πâ‡πÄ‡πÄ‡∏•‡πâ‡∏ß ‡∏û‡∏¥‡∏ò‡∏µ‡∏ï‡πâ....'");
var note4 = new Object("note", 9, "'....‡πÉ‡∏ä‡πâñ£òñ£òñ£òñ£òñ£ò‡∏ß‡∏≤‡∏î‡∏ß‡∏á‡πÄ‡∏ß‡∏ó‡∏¢‡πå‡∏ï‡∏≤‡∏°‡∏£‡∏≠‡∏¢‡∏Å‡∏•‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢....‡∏ï‡∏∏‡πä‡∏Å‡∏ï....‡∏≤‡πÑ‡∏ß‡πâ‡∏•‡∏∞‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏∏‡∏£‡∏¥‡∏¢‡∏Ñ‡∏£‡∏≤‡∏™....‡∏≠‡∏¢‡πà‡∏≤‡∏û‡∏•‡∏≤‡∏î‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏á‡∏±‡∏ô‡∏°‡∏±‡∏ô‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏ò‡∏≠‡πÄ‡πÄ‡∏ó‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏ô‡πà‡∏ô   ‡∏à‡∏≤‡∏Å Alice' ‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡∏à‡∏∞‡∏≠‡∏≠‡∏Å");
var tofu = new Object("x", 10, "ñ£òñ£òñ£òñ£ò");

var room0 = new Room(
  "‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô",
  0,
  "‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÄ‡∏ï‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏µ‡∏ï‡∏π‡πâ‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡∏ã‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÄ‡∏ï‡∏µ‡∏¢‡∏á‡πÄ‡πÄ‡∏•‡∏∞‡∏´‡∏±‡∏ß‡πÄ‡∏ï‡∏µ‡∏¢‡∏á‡πÑ‡∏õ‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏ó‡∏≤‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô‡πÉ‡∏ô‡∏ó‡∏¥‡∏®‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å(west)‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡∏°‡∏µ‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡∏±‡∏ö‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ‡∏´‡∏±‡∏ô‡πÑ‡∏õ‡∏ó‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©(note)‡πÅ‡∏•‡∏∞ flashlight ‡∏ß‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡πÇ‡∏ï‡πä‡∏∞‡∏Ç‡πâ‡∏≤‡∏á‡∏ó‡∏≤‡∏á‡∏≠‡∏≠‡∏Å.",
  ["west"],
  [bed, wardrobe, table, chair, note1],
  [flashlight]
);
var roomM1 = new Room(
  "‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô",
  -1,
  "‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏ï‡∏£‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô(east)‡∏°‡∏µ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÑ‡∏°‡πâ‡∏ß‡∏≤‡∏á‡∏Å‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏•‡∏≤‡∏¢‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡πÄ‡∏•‡∏∞‡∏ñ‡∏±‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏°‡∏µ ‡∏Å‡∏£‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÄ‡∏õ‡∏•‡πà‡∏≤(pictureframe) ‡∏´‡πâ‡∏≠‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÄ‡πÄ‡∏•‡∏∞‡∏î‡∏π‡πÄ‡∏´‡∏ó‡∏∑‡∏≠‡∏ô‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÑ‡∏õ‡πÉ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏¥‡∏®‡πÄ‡∏´‡∏ô‡∏∑‡∏≠(north).",
  ["north", "east"],
  [woodenbox, pictureframe],
  []
);
var room100M1 = new Room(
  "‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô",
  99,
  "‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏ï‡∏£‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô(east)‡∏°‡∏µ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÑ‡∏°‡πâ‡∏ö‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏®‡∏©‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©(note)‡∏ß‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÄ‡πÄ‡∏•‡∏∞‡∏î‡∏π‡πÄ‡∏´‡∏ó‡∏∑‡∏≠‡∏ô‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÑ‡∏õ‡πÉ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏¥‡∏®‡πÉ‡∏ï‡πâ(south).",
  ["south", "east"],
  [woodenbox, note2],
  []
);
var room100 = new Room(
  "‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô",
  100,
  "‡∏°‡∏µ‡∏ó‡∏µ‡∏ß‡∏µ‡πÄ‡πÄ‡∏•‡∏∞‡πÇ‡∏ã‡∏ü‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á ‡πÉ‡∏Å‡∏•‡πâ‡πÜ‡∏Å‡∏±‡∏ö‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡πÇ‡∏ñ‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô(west)‡∏°‡∏µ‡∏ï‡∏π‡πâ‡∏•‡∏¥‡πâ‡∏ô‡∏ä‡∏±‡∏Å‡πÅ‡∏•‡∏∞ ‡∏°‡∏µ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÑ‡∏°‡πâ‡∏ß‡∏≤‡∏á‡∏Å‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏™‡∏≠‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡πÇ‡∏ñ‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô(east).",
  ["west", "east"],
  [woodenbox, tv, sofa],
  []
);
var room101 = new Room(
  "‡πÇ‡∏ñ‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô",
  101,
  "‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏±‡∏ö‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô(west)‡∏°‡∏µ‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏ã‡∏∂‡πà‡∏á‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏±‡∏ö‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ß(east) ‡πÄ‡πÄ‡∏•‡∏∞‡∏°‡∏µ‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏≠‡∏á(south)‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏ó‡∏≤‡∏á‡∏≠‡∏≠‡∏Å(north).",
  ["west", "south", "north", "east"],
  [shoerack],
  []
);
var room102 = new Room(
  "‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ß", 
  102, 
  "‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡πÄ‡∏ï‡πà‡∏ä‡∏±‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ö‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡∏°‡∏µ‡∏°‡∏µ‡πÄ‡∏®‡∏©‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©(note)‡∏ß‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≤‡∏á‡πÜ‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡πÄ‡∏ï‡∏Å‡∏≠‡∏¢‡∏π‡πà ‡πÅ‡∏•‡∏∞‡∏ó‡∏≤‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÇ‡∏ñ‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô(west).", 
  ["west"], 
  [shelves, windoww, note3]
);
var room1 = new Room(
  "‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏≠‡∏á",
  1,
  "‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡πÄ‡∏ï‡πà‡∏°‡∏µ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÑ‡∏°‡πâ‡∏ß‡∏≤‡∏á‡∏Å‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡∏Å‡∏à‡∏ô‡πÄ‡πÄ‡∏ó‡∏ö‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡πÄ‡∏ï‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏î‡∏¥‡∏ô‡πÑ‡∏õ‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏ã‡∏∂‡∏á‡∏°‡∏µ ‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏ä‡∏±‡πâ‡∏ô‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô(door) ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏û‡∏∑‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏≤‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÇ‡∏ñ‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô(north).",
  ["north"],
  [woodenbox, doorB1],
  []
);
var roomF1 = new Room(
  "‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô",
  666,
  "‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡πÄ‡∏Å‡πà‡∏≤‡πÜ(door)...‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ß‡∏á‡∏Å‡∏•‡∏°‡∏ã‡∏∂‡πà‡∏á‡∏Ç‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏°‡∏µ‡∏•‡∏ß‡∏î‡∏•‡∏≤‡∏¢‡πÄ‡∏£‡∏Ç‡∏≤‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏™‡∏•‡∏±‡∏ö‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ß‡∏≤‡∏î‡πÑ‡∏ß‡πâ‡∏ö‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏™‡∏≤‡∏£‡∏™‡∏µ‡πÄ‡πÄ‡∏î‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏°‡∏µ x ‡∏ß‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏ö‡πÜ‡∏°‡∏µ‡πÄ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏à‡∏∏‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÄ‡πÄ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏®‡∏©‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©(note)‡∏ß‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà.",
  [],
  [doorG1, note4],
  [tofu]
);
var out201 = new End("out 201", 201, "‡∏Ç‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å‡∏°‡∏µ‡πÄ‡πÄ‡∏ï‡πà‡∏õ‡πà‡∏≤.", [], []);
const rooms = [room0, roomM1, room1, room100, room100M1, room101, room102, out201 ,roomF1];

const player = new Player();
start();

function showtext(text) {
  var resultBox = document.getElementById("resultBox");
  var resultElement = document.createElement("p");
  resultElement.innerHTML = text;
  resultBox.appendChild(resultElement);
  resultBox.scrollTop = resultBox.scrollHeight;
}

function getRoom(id) {
  const room = rooms.find((room) => room.getId() === id);
  return room;
}
function getObject(input, id) {
  const objects = getRoom(id).getObjects();
  const object = objects.find((obj) => obj.getName() === input || obj.getId() === input);
  return object;
}

function details(player) {
  var detail = "Name: " + player.getName() + "<br>";
  detail += "Health: " + player.getHealth() + "<br>";
  detail += "Stamina: " + player.getStamina() + "<br>";
  detail += "<br>";
  detail += "Inventory: " + "<br>";
  for (const item of player.getInventory()) {
    detail += "<li>" + item.getName() + "</li>";
  }
  detail += "<br>";
  detail += "what " + player.getName() + " can do" + "<br>";
  detail += "go north,go south,go east,go west," + "<br>";
  detail += "<br>";
  detail += "take {item}," + "<br>";
  detail += " key //‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á item," + "<br>";
  detail += "<br>";
  detail += "{object} //‡∏ï‡∏£‡∏ß‡∏à‡∏î‡∏π object," + "<br>";
  detail += "back //close object," + "<br>";
  detail += " ..(note) //‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á object," + "<br>";
  detail += "<br>";
  detail += "enter {object} //‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π," + "<br>";

  return detail;
}
function showDetails(player) {
  var playerDetails = document.getElementById("playerDetail");
  playerDetails.innerHTML = details(player);
}

function reloadPage() {
  location.reload();
}

function start() {
  var enterName = prompt("name?");
  player.setName(enterName);
  showDetails(player);
  playGame();
}
function playGame() {
  var room = getRoom(id);
  var roomDescription = room.getDescription();
  showtext("*‡πÄ‡∏û‡∏•‡πâ‡∏á*......");
  showtext(
    player.getName() +
      " ‡∏•‡∏∑‡∏°‡∏ï‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡∏≤‡∏á‡πÄ‡πÄ‡∏ï‡∏Å....‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô"
  );
  showtext(roomDescription);
  showtext("what will " + player.getName() + " do?");

  inputElement.addEventListener("keydown", function (event) {
    if (event.key === "Enter") {
      var input = inputElement.value;
      inputElement.value = "";
      console.log(input);

      if (input.includes("enter ")) {
        var intake = input.split(" ")[1];
        obj = getObject(intake, id);
        obj.next();
        fun = 0;
      } else if (input.includes("back") && fun === -1) {
          fun = 0;
      }  else if (input.includes("go ")) {
        player.go(input);
      } else if (roomDescription.includes(input)) {
        obj = getObject(input, id);
        if (obj) {
          objID = obj.getId();
          showtext(obj.getDescription());
          fun = -1;
        } else {
          var text = "try again.";
          showtext(text);
        }
      } else if (input.includes("take ")) {
        const itemName = input.split("take ")[1].trim();
        if (fun === -1) {
          player.take(itemName, id, objID);
          fun = 0;
        } else {
          player.take(itemName, id);
        }
      } else {
        var text = "try again.";
        showtext(text);
      }
      
      console.log("RoomID"+id)
      var room = getRoom(id);
      roomName = room.getName();
      roomDescription = room.getDescription();
      showDetails(player);

      if (room instanceof End) {
        text = room.ending();
        showtext(roomName + ": " + roomDescription);
        showtext(text);

        var resultBox = document.getElementById("resultBox");
        var reloadButton = document.createElement("button");
        reloadButton.addEventListener("click", reloadPage);
        reloadButton.innerHTML = "reset";
        resultBox.appendChild(reloadButton);
      } else if (fun != -1) {
        showtext(roomName + ": " + roomDescription);
      }
    }
  });
}
